'use client'

import { useState } from 'react'
import { BarChart3, Users, DollarSign, TrendingUp, Settings, Bell, Search, Filter, Eye, Edit, Trash2, Plus } from 'lucide-react'
import Link from 'next/link'

export default function AdminDashboard() {
  const [activeTab, setActiveTab] = useState('overview')

  const stats = [
    { label: 'Usu√°rios Ativos', value: '12.5K', change: '+12%', icon: Users },
    { label: 'Receita Mensal', value: 'R$ 45.2K', change: '+8%', icon: DollarSign },
    { label: 'Servi√ßos Realizados', value: '3.2K', change: '+15%', icon: BarChart3 },
    { label: 'Taxa de Crescimento', value: '23%', change: '+5%', icon: TrendingUp },
  ]

  const recentUsers = [
    { id: 1, name: 'Jo√£o Silva', email: 'joao@email.com', type: 'Cliente', status: 'Ativo', joinDate: '15/02/2024' },
    { id: 2, name: 'Maria Santos', email: 'maria@email.com', type: 'Prestador', status: 'Ativo', joinDate: '14/02/2024' },
    { id: 3, name: 'Carlos Lima', email: 'carlos@email.com', type: 'Cliente', status: 'Inativo', joinDate: '13/02/2024' },
    { id: 4, name: 'Ana Costa', email: 'ana@email.com', type: 'Prestador', status: 'Pendente', joinDate: '12/02/2024' },
  ]

  const recentServices = [
    { id: 1, service: 'Limpeza Residencial', client: 'Jo√£o Silva', provider: 'Maria Santos', value: 'R$ 120', status: 'Conclu√≠do' },
    { id: 2, service: 'Reparo El√©trico', client: 'Ana Costa', provider: 'Carlos Lima', value: 'R$ 85', status: 'Em Andamento' },
    { id: 3, service: 'Mudan√ßa', client: 'Pedro Souza', provider: 'Jos√© Santos', value: 'R$ 350', status: 'Agendado' },
  ]

  // Handlers para a√ß√µes dos usu√°rios
  const handleNewUser = () => {
    const userData = prompt('Criar novo usu√°rio:\n\nDigite os dados no formato:\nNome, Email, Tipo (Cliente/Prestador)')
    if (userData && userData.trim()) {
      alert(`‚úÖ Novo usu√°rio criado com sucesso!\n\nDados: ${userData}\n\nüìß O usu√°rio receber√° um e-mail de boas-vindas\nüîê Senha tempor√°ria ser√° enviada por e-mail\nüì± Acesso liberado imediatamente`)
    }
  }

  const handleViewUser = (userId: number) => {
    const user = recentUsers.find(u => u.id === userId)
    if (user) {
      alert(`üë§ Detalhes do Usu√°rio:\n\nüìã INFORMA√á√ïES B√ÅSICAS:\nNome: ${user.name}\nEmail: ${user.email}\nTipo: ${user.type}\nStatus: ${user.status}\nData de Cadastro: ${user.joinDate}\n\nüìä ESTAT√çSTICAS:\n‚Ä¢ Servi√ßos realizados: ${Math.floor(Math.random() * 50) + 1}\n‚Ä¢ Avalia√ß√£o m√©dia: ${(4 + Math.random()).toFixed(1)}‚≠ê\n‚Ä¢ √öltimo acesso: ${Math.floor(Math.random() * 24) + 1}h atr√°s\n\nüí∞ FINANCEIRO:\n‚Ä¢ Valor total movimentado: R$ ${(Math.random() * 5000 + 500).toFixed(2)}\n‚Ä¢ Comiss√£o gerada: R$ ${(Math.random() * 500 + 50).toFixed(2)}`)
    }
  }

  const handleEditUser = (userId: number) => {
    const user = recentUsers.find(u => u.id === userId)
    if (user) {
      const newData = prompt(`‚úèÔ∏è Editar usu√°rio: ${user.name}\n\nüìã DADOS ATUAIS:\nNome: ${user.name}\nEmail: ${user.email}\nTipo: ${user.type}\nStatus: ${user.status}\n\nüìù Digite os novos dados separados por v√≠rgula:\n(Nome, Email, Tipo, Status)`)
      if (newData && newData.trim()) {
        alert(`‚úÖ Usu√°rio ${user.name} atualizado com sucesso!\n\nüìù Novos dados: ${newData}\n\nüìß Usu√°rio ser√° notificado das altera√ß√µes\nüîÑ Altera√ß√µes aplicadas imediatamente`)
      }
    }
  }

  const handleDeleteUser = (userId: number) => {
    const user = recentUsers.find(u => u.id === userId)
    if (user) {
      if (confirm(`‚ö†Ô∏è ATEN√á√ÉO: Exclus√£o de usu√°rio\n\nTem certeza que deseja excluir:\nüë§ ${user.name}\nüìß ${user.email}\n\n‚ùå Esta a√ß√£o N√ÉO pode ser desfeita!\n\n‚úÖ Todos os dados ser√£o permanentemente removidos:\n‚Ä¢ Perfil e informa√ß√µes pessoais\n‚Ä¢ Hist√≥rico de servi√ßos\n‚Ä¢ Conversas e mensagens\n‚Ä¢ Avalia√ß√µes e coment√°rios`)) {
        alert(`‚úÖ Usu√°rio exclu√≠do com sucesso!\n\nüë§ ${user.name} foi removido do sistema\n\nüóëÔ∏è DADOS REMOVIDOS:\n‚Ä¢ Perfil completo\n‚Ä¢ Hist√≥rico de transa√ß√µes\n‚Ä¢ Conversas e mensagens\n‚Ä¢ Avalia√ß√µes recebidas/enviadas\n\nüìß E-mail de confirma√ß√£o enviado para o administrador`)
      }
    }
  }

  const handleUserSettings = (userId: number) => {
    const user = recentUsers.find(u => u.id === userId)
    if (user) {
      alert(`‚öôÔ∏è Configura√ß√µes para ${user.name}:\n\nüîß OP√á√ïES DISPON√çVEIS:\n\nüîê SEGURAN√áA:\n‚Ä¢ Redefinir senha\n‚Ä¢ Bloquear/Desbloquear conta\n‚Ä¢ Ativar autentica√ß√£o 2FA\n‚Ä¢ Hist√≥rico de logins\n\nüë§ PERFIL:\n‚Ä¢ Alterar permiss√µes\n‚Ä¢ Configurar visibilidade\n‚Ä¢ Gerenciar dados pessoais\n\nüì± NOTIFICA√á√ïES:\n‚Ä¢ Configurar alertas\n‚Ä¢ Prefer√™ncias de e-mail\n‚Ä¢ Notifica√ß√µes push\n\nüìä RELAT√ìRIOS:\n‚Ä¢ Atividades recentes\n‚Ä¢ Hist√≥rico completo\n‚Ä¢ Relat√≥rio de performance\n\n‚ö†Ô∏è A√á√ïES ADMINISTRATIVAS:\n‚Ä¢ Suspender temporariamente\n‚Ä¢ Aplicar advert√™ncia\n‚Ä¢ Hist√≥rico de penalidades`)
    }
  }

  const renderOverview = () => (
    <div className="space-y-6">
      {/* Stats Cards */}
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        {stats.map((stat, index) => (
          <div key={index} className="bg-gray-900 p-4 rounded-xl">
            <div className="flex items-center justify-between mb-3">
              <stat.icon className="w-6 h-6 text-white" />
              <span className="text-green-500 text-sm font-semibold">{stat.change}</span>
            </div>
            <h3 className="text-2xl font-bold text-white mb-1">{stat.value}</h3>
            <p className="text-gray-400 text-sm">{stat.label}</p>
          </div>
        ))}
      </div>

      {/* Recent Activity */}
      <div className="bg-gray-900 p-4 rounded-xl">
        <h3 className="text-lg font-bold text-white mb-4">Atividade Recente</h3>
        <div className="space-y-3">
          <div className="flex items-center space-x-3 p-3 bg-gray-800 rounded-lg">
            <div className="w-2 h-2 bg-green-500 rounded-full"></div>
            <div className="flex-1">
              <p className="text-white text-sm">Novo usu√°rio cadastrado: Jo√£o Silva</p>
              <p className="text-gray-400 text-xs">H√° 5 minutos</p>
            </div>
          </div>
          <div className="flex items-center space-x-3 p-3 bg-gray-800 rounded-lg">
            <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
            <div className="flex-1">
              <p className="text-white text-sm">Servi√ßo conclu√≠do: Limpeza Residencial</p>
              <p className="text-gray-400 text-xs">H√° 12 minutos</p>
            </div>
          </div>
          <div className="flex items-center space-x-3 p-3 bg-gray-800 rounded-lg">
            <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
            <div className="flex-1">
              <p className="text-white text-sm">Pagamento processado: R$ 120,00</p>
              <p className="text-gray-400 text-xs">H√° 18 minutos</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )

  const renderUsers = () => (
    <div className="space-y-4">
      {/* Header */}
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-bold text-white">Gerenciar Usu√°rios</h3>
        <button 
          onClick={handleNewUser}
          className="bg-white text-black px-4 py-2 rounded-lg font-semibold flex items-center space-x-2 hover:bg-gray-100 transition-colors"
        >
          <Plus className="w-4 h-4" />
          <span>Novo Usu√°rio</span>
        </button>
      </div>

      {/* Search and Filter */}
      <div className="flex space-x-3">
        <div className="flex-1 relative">
          <Search className="w-5 h-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
          <input
            type="text"
            placeholder="Buscar usu√°rios..."
            className="w-full bg-gray-800 text-white pl-10 pr-4 py-3 rounded-lg border border-gray-700 focus:border-white focus:outline-none"
          />
        </div>
        <button 
          onClick={() => alert('üîç Filtros Dispon√≠veis:\n\nüë• POR TIPO:\n‚Ä¢ Clientes\n‚Ä¢ Prestadores de servi√ßo\n‚Ä¢ Administradores\n\nüìä POR STATUS:\n‚Ä¢ Ativos\n‚Ä¢ Inativos\n‚Ä¢ Pendentes de aprova√ß√£o\n‚Ä¢ Suspensos\n\nüìÖ POR DATA:\n‚Ä¢ Cadastrados hoje\n‚Ä¢ √öltimos 7 dias\n‚Ä¢ √öltimo m√™s\n‚Ä¢ Per√≠odo personalizado\n\nüìç POR LOCALIZA√á√ÉO:\n‚Ä¢ Por estado\n‚Ä¢ Por cidade\n‚Ä¢ Por regi√£o\n\n‚≠ê POR AVALIA√á√ÉO:\n‚Ä¢ 5 estrelas\n‚Ä¢ 4+ estrelas\n‚Ä¢ 3+ estrelas\n‚Ä¢ Sem avalia√ß√£o')}
          className="bg-gray-800 text-white p-3 rounded-lg border border-gray-700 hover:bg-gray-700 transition-colors"
        >
          <Filter className="w-5 h-5" />
        </button>
      </div>

      {/* Users List */}
      <div className="space-y-3">
        {recentUsers.map((user) => (
          <div key={user.id} className="bg-gray-900 p-4 rounded-xl">
            <div className="flex items-center justify-between mb-2">
              <div>
                <h4 className="font-semibold text-white">{user.name}</h4>
                <p className="text-gray-400 text-sm">{user.email}</p>
              </div>
              <div className="flex items-center space-x-2">
                <span className={`px-2 py-1 rounded text-xs font-semibold ${
                  user.status === 'Ativo' ? 'bg-green-600 text-white' :
                  user.status === 'Inativo' ? 'bg-red-600 text-white' :
                  'bg-yellow-600 text-black'
                }`}>
                  {user.status}
                </span>
              </div>
            </div>
            <div className="flex items-center justify-between text-sm">
              <div className="flex items-center space-x-4 text-gray-400">
                <span>{user.type}</span>
                <span>Desde {user.joinDate}</span>
              </div>
              <div className="flex items-center space-x-2">
                <button 
                  onClick={() => handleViewUser(user.id)}
                  className="text-gray-400 hover:text-white transition-colors p-1 rounded hover:bg-gray-800"
                  title="Ver detalhes"
                >
                  <Eye className="w-4 h-4" />
                </button>
                <button 
                  onClick={() => handleEditUser(user.id)}
                  className="text-gray-400 hover:text-white transition-colors p-1 rounded hover:bg-gray-800"
                  title="Editar usu√°rio"
                >
                  <Edit className="w-4 h-4" />
                </button>
                <button 
                  onClick={() => handleDeleteUser(user.id)}
                  className="text-gray-400 hover:text-red-500 transition-colors p-1 rounded hover:bg-gray-800"
                  title="Excluir usu√°rio"
                >
                  <Trash2 className="w-4 h-4" />
                </button>
                <button 
                  onClick={() => handleUserSettings(user.id)}
                  className="text-gray-400 hover:text-white transition-colors p-1 rounded hover:bg-gray-800"
                  title="Configura√ß√µes"
                >
                  <Settings className="w-4 h-4" />
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )

  const renderServices = () => (
    <div className="space-y-4">
      {/* Header */}
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-bold text-white">Servi√ßos</h3>
        <button 
          onClick={() => alert('üìä Relat√≥rio Completo de Servi√ßos:\n\nüìà ESTAT√çSTICAS GERAIS:\n‚Ä¢ Total de servi√ßos: 3.247\n‚Ä¢ Receita total: R$ 145.230,50\n‚Ä¢ Taxa de conclus√£o: 94.2%\n‚Ä¢ Avalia√ß√£o m√©dia: 4.7‚≠ê\n‚Ä¢ Tempo m√©dio de execu√ß√£o: 2.3h\n\nüìÖ PER√çODO ATUAL (Fevereiro 2024):\n‚Ä¢ Servi√ßos realizados: 287\n‚Ä¢ Receita do m√™s: R$ 12.450,00\n‚Ä¢ Crescimento: +15% vs m√™s anterior\n\nüèÜ TOP CATEGORIAS:\n1. Limpeza Residencial (32%)\n2. Reparos El√©tricos (18%)\n3. Encanamento (15%)\n4. Mudan√ßas (12%)\n5. Jardinagem (10%)\n\nüí∞ FATURAMENTO POR REGI√ÉO:\n‚Ä¢ S√£o Paulo: R$ 45.200\n‚Ä¢ Rio de Janeiro: R$ 32.100\n‚Ä¢ Belo Horizonte: R$ 18.900\n‚Ä¢ Outras: R$ 49.030\n\nüìã Relat√≥rio detalhado dispon√≠vel para download em PDF/Excel')}
          className="bg-white text-black px-4 py-2 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
        >
          Relat√≥rio Completo
        </button>
      </div>

      {/* Services List */}
      <div className="space-y-3">
        {recentServices.map((service) => (
          <div key={service.id} className="bg-gray-900 p-4 rounded-xl">
            <div className="flex items-center justify-between mb-2">
              <div>
                <h4 className="font-semibold text-white">{service.service}</h4>
                <p className="text-gray-400 text-sm">Cliente: {service.client}</p>
                <p className="text-gray-400 text-sm">Prestador: {service.provider}</p>
              </div>
              <div className="text-right">
                <p className="font-bold text-white">{service.value}</p>
                <span className={`px-2 py-1 rounded text-xs font-semibold ${
                  service.status === 'Conclu√≠do' ? 'bg-green-600 text-white' :
                  service.status === 'Em Andamento' ? 'bg-blue-600 text-white' :
                  'bg-yellow-600 text-black'
                }`}>
                  {service.status}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Header */}
      <header className="border-b border-gray-800 p-4">
        <div className="max-w-md mx-auto flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <Link href="/" className="text-gray-400 hover:text-white">
              ‚Üê
            </Link>
            <h1 className="text-xl font-bold">Admin Dashboard</h1>
          </div>
          <div className="flex items-center space-x-3">
            <button 
              onClick={() => alert('üîî Notifica√ß√µes do Admin:\n\n‚ö†Ô∏è PEND√äNCIAS:\n‚Ä¢ 3 novos usu√°rios aguardando aprova√ß√£o\n‚Ä¢ 2 relat√≥rios de problemas n√£o resolvidos\n‚Ä¢ 1 solicita√ß√£o de suporte em aberto\n\nüìä ALERTAS DO SISTEMA:\n‚Ä¢ Sistema funcionando normalmente\n‚Ä¢ Backup realizado com sucesso (02:00)\n‚Ä¢ 99.8% de uptime nas √∫ltimas 24h\n\nüí∞ FINANCEIRO:\n‚Ä¢ 5 pagamentos pendentes de processamento\n‚Ä¢ Receita do dia: R$ 2.340,00\n‚Ä¢ Meta mensal: 78% atingida\n\nüö® SEGURAN√áA:\n‚Ä¢ Nenhuma tentativa de acesso suspeita\n‚Ä¢ Certificado SSL v√°lido at√© 15/08/2024\n‚Ä¢ √öltima atualiza√ß√£o de seguran√ßa: ontem')}
              className="text-gray-400 hover:text-white transition-colors p-2 rounded-lg hover:bg-gray-800"
            >
              <Bell className="w-5 h-5" />
            </button>
            <button 
              onClick={() => alert('‚öôÔ∏è Configura√ß√µes do Sistema:\n\nüîß CONFIGURA√á√ïES GERAIS:\n‚Ä¢ Configura√ß√µes da plataforma\n‚Ä¢ Par√¢metros de funcionamento\n‚Ä¢ Pol√≠ticas de uso\n‚Ä¢ Termos de servi√ßo\n\nüë• GERENCIAR ADMINISTRADORES:\n‚Ä¢ Adicionar novos admins\n‚Ä¢ Definir permiss√µes\n‚Ä¢ Hist√≥rico de a√ß√µes\n‚Ä¢ Controle de acesso\n\nüí≥ CONFIGURA√á√ïES DE PAGAMENTO:\n‚Ä¢ Gateways de pagamento\n‚Ä¢ Taxas e comiss√µes\n‚Ä¢ M√©todos aceitos\n‚Ä¢ Configura√ß√µes fiscais\n\nüîí BACKUP E SEGURAN√áA:\n‚Ä¢ Backup autom√°tico\n‚Ä¢ Configura√ß√µes de seguran√ßa\n‚Ä¢ Monitoramento de amea√ßas\n‚Ä¢ Logs de auditoria\n\nüìä LOGS DO SISTEMA:\n‚Ä¢ Logs de erro\n‚Ä¢ Logs de acesso\n‚Ä¢ Logs de transa√ß√µes\n‚Ä¢ Relat√≥rios de performance')}
              className="text-gray-400 hover:text-white transition-colors p-2 rounded-lg hover:bg-gray-800"
            >
              <Settings className="w-5 h-5" />
            </button>
          </div>
        </div>
      </header>

      {/* Navigation Tabs */}
      <div className="max-w-md mx-auto px-6 pt-4">
        <div className="flex space-x-1 bg-gray-900 p-1 rounded-lg">
          <button
            onClick={() => setActiveTab('overview')}
            className={`flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${
              activeTab === 'overview' ? 'bg-white text-black' : 'text-gray-400 hover:text-white'
            }`}
          >
            Vis√£o Geral
          </button>
          <button
            onClick={() => setActiveTab('users')}
            className={`flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${
              activeTab === 'users' ? 'bg-white text-black' : 'text-gray-400 hover:text-white'
            }`}
          >
            Usu√°rios
          </button>
          <button
            onClick={() => setActiveTab('services')}
            className={`flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors ${
              activeTab === 'services' ? 'bg-white text-black' : 'text-gray-400 hover:text-white'
            }`}
          >
            Servi√ßos
          </button>
        </div>
      </div>

      {/* Main Content */}
      <main className="max-w-md mx-auto p-6">
        {activeTab === 'overview' && renderOverview()}
        {activeTab === 'users' && renderUsers()}
        {activeTab === 'services' && renderServices()}
      </main>
    </div>
  )
}